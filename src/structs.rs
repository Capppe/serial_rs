use serde::{Deserialize, Serialize};

#[derive(Debug, Serialize, Deserialize)]
pub struct SerialDeviceInfo {
    pub SYSNAME: Option<String>,
    pub SYSNUM: Option<String>,
    pub DEVPATH: Option<String>,
    pub DEVNAME: Option<String>,
    pub MAJOR: Option<String>,
    pub MINOR: Option<String>,
    pub SUBSYSTEM: Option<String>,
    pub USEC_INITIALIZED: Option<String>,
    pub ID_BUS: Option<String>,
    pub ID_MODEL: Option<String>,
    pub ID_MODEL_ENC: Option<String>,
    pub ID_MODEL_ID: Option<String>,
    pub ID_SERIAL: Option<String>,
    pub ID_VENDOR: Option<String>,
    pub ID_VENDOR_ENC: Option<String>,
    pub ID_VENDOR_ID: Option<String>,
    pub ID_REVISION: Option<String>,
    pub ID_TYPE: Option<String>,
    pub ID_USB_MODEL: Option<String>,
    pub ID_USB_MODEL_ENC: Option<String>,
    pub ID_USB_MODEL_ID: Option<String>,
    pub ID_USB_SERIAL: Option<String>,
    pub ID_USB_VENDOR: Option<String>,
    pub ID_USB_VENDOR_ENC: Option<String>,
    pub ID_USB_VENDOR_ID: Option<String>,
    pub ID_USB_REVISION: Option<String>,
    pub ID_USB_TYPE: Option<String>,
    pub ID_USB_INTERFACES: Option<String>,
    pub ID_USB_INTERFACE_NUM: Option<String>,
    pub ID_USB_DRIVER: Option<String>,
    pub ID_USB_CLASS_FROM_DATABASE: Option<String>,
    pub ID_VENDOR_FROM_DATABASE: Option<String>,
    pub ID_MODEL_FROM_DATABASE: Option<String>,
    pub ID_PATH_WITH_USB_REVISION: Option<String>,
    pub ID_PATH: Option<String>,
    pub ID_PATH_TAG: Option<String>,
    pub ID_FOR_SEAT: Option<String>,
    pub DEVLINKS: Option<String>,
    pub TAGS: Option<String>,
    pub CURRENT_TAGS: Option<String>,
}
